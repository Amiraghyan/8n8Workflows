{
  "active": false,
  "connections": {
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-20T07:50:34.273Z",
  "id": "Sz5lcxkeccm10YNs",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Dynamic Form UI generator",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.prompt }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a JSON UI form generator for a web application.\n\nYour job is to:\n- Return only valid JSON.\n- Do not include explanations or markdown.\n- Always return a \"title\" and a \"fields\" array.\n- Each field should include:\n  - type (text, number, select, checkbox, etc.)\n  - name (snake_case)\n  - label (a question to the user)\n  - placeholder (optional)\n  - required (true or false)\n  - options (for select/radio)\n  - conditions (optional logic based on previous inputs)\n\nOn submission, return either:\n- A new JSON form (if more data is needed)\n- An action directive (e.g., {\"navigate_to\": \"dashboard\"})\n\nResponse json schema\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://yourdomain.com/schemas/ui-form.schema.json\",\n  \"title\": \"Dynamic UI Form Schema\",\n  \"type\": \"object\",\n  \"required\": [\"title\", \"fields\"],\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"description\": \"The form's title shown at the top of the page\"\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"description\": \"Optional description providing more context to the user\"\n    },\n    \"fields\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"required\": [\"type\", \"name\", \"label\"],\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"text\",\n              \"textarea\",\n              \"email\",\n              \"number\",\n              \"select\",\n              \"radio\",\n              \"checkbox\",\n              \"date\",\n              \"file\"\n            ]\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"pattern\": \"^[a-z_][a-z0-9_]*$\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"placeholder\": {\n            \"type\": \"string\"\n          },\n          \"required\": {\n            \"type\": \"boolean\",\n            \"default\": false\n          },\n          \"options\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Used for select, radio, checkbox\"\n          },\n          \"min\": {\n            \"type\": \"number\"\n          },\n          \"max\": {\n            \"type\": \"number\"\n          },\n          \"conditions\": {\n            \"type\": \"object\",\n            \"description\": \"Field visibility based on other answers\",\n            \"patternProperties\": {\n              \"^[a-z_][a-z0-9_]*$\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"on_submit\": {\n      \"type\": \"object\",\n      \"description\": \"What to do when the form is submitted\",\n      \"properties\": {\n        \"next\": {\n          \"type\": \"string\",\n          \"description\": \"Identifier for the next step (another form, flow, etc.)\"\n        },\n        \"ai_action\": {\n          \"type\": \"string\",\n          \"description\": \"Trigger the AI to perform a follow-up or transition\"\n        },\n        \"navigate_to\": {\n          \"type\": \"string\",\n          \"description\": \"Redirect the user to another page (e.g., dashboard)\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        208,
        0
      ],
      "id": "7fb80f3b-fc46-4e6a-97e7-6827930035ae",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        64,
        208
      ],
      "id": "238794df-4cdf-4275-87cf-79a9d302fd88",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "ZBtkKEVmgRcWvWO5",
          "name": "Google Gemini(PaLM) Api account 3"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "b26a35d0-e3b1-431d-a41a-6894fc56aecb",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        -16
      ],
      "id": "2f0db0d0-aaf2-4a0b-8cf4-1e8f1e5680c3",
      "name": "Webhook",
      "webhookId": "b26a35d0-e3b1-431d-a41a-6894fc56aecb"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        560,
        0
      ],
      "id": "2dc60ace-cd50-47f7-925b-63969f2f904c",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://yourdomain.com/schemas/ui-form.schema.json\",\n  \"title\": \"Dynamic UI Form Schema\",\n  \"type\": \"object\",\n  \"required\": [\"title\", \"fields\"],\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"description\": \"The form's title shown at the top of the page\"\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"description\": \"Optional description providing more context to the user\"\n    },\n    \"fields\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"required\": [\"type\", \"name\", \"label\"],\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"text\",\n              \"textarea\",\n              \"email\",\n              \"number\",\n              \"select\",\n              \"radio\",\n              \"checkbox\",\n              \"date\",\n              \"file\"\n            ]\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"pattern\": \"^[a-z_][a-z0-9_]*$\"\n          },\n          \"label\": {\n            \"type\": \"string\"\n          },\n          \"placeholder\": {\n            \"type\": \"string\"\n          },\n          \"required\": {\n            \"type\": \"boolean\",\n            \"default\": false\n          },\n          \"options\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Used for select, radio, checkbox\"\n          },\n          \"min\": {\n            \"type\": \"number\"\n          },\n          \"max\": {\n            \"type\": \"number\"\n          },\n          \"conditions\": {\n            \"type\": \"object\",\n            \"description\": \"Field visibility based on other answers\",\n            \"patternProperties\": {\n              \"^[a-z_][a-z0-9_]*$\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"on_submit\": {\n      \"type\": \"object\",\n      \"description\": \"What to do when the form is submitted\",\n      \"properties\": {\n        \"next\": {\n          \"type\": \"string\",\n          \"description\": \"Identifier for the next step (another form, flow, etc.)\"\n        },\n        \"ai_action\": {\n          \"type\": \"string\",\n          \"description\": \"Trigger the AI to perform a follow-up or transition\"\n        },\n        \"navigate_to\": {\n          \"type\": \"string\",\n          \"description\": \"Redirect the user to another page (e.g., dashboard)\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        384,
        224
      ],
      "id": "bdec6121-ee69-4874-b6c7-01e0052bebcb",
      "name": "Structured Output Parser"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-20T14:47:18.000Z",
  "versionId": "6dbd0482-0c54-4c8e-b07e-8aff4757794b"
}