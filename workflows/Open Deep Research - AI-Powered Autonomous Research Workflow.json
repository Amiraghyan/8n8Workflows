{"createdAt":"2025-03-01T13:18:51.626Z","updatedAt":"2025-03-03T19:29:45.744Z","id":"2dfNZKWvMGz87fn5","name":"Open Deep Research - AI-Powered Autonomous Research Workflow","active":true,"nodes":[{"parameters":{"public":true,"options":{}},"id":"b7b70ba1-0267-4d2b-91f4-5cc4fd22fd03","name":"Chat Message Trigger","type":"@n8n/n8n-nodes-langchain.chatTrigger","position":[380,240],"webhookId":"cb0b9dbe-1f35-441a-b062-29624b0ebc6a","typeVersion":1.1},{"parameters":{"promptType":"define","text":"=User Query: {{ $('Chat Message Trigger').item.json.chatInput }}","messages":{"messageValues":[{"message":"=You are an expert research assistant. Given a user's query, generate up to four distinct, precise search queries that would help gather comprehensive information on the topic. Return only a JSON list of strings, for example: ['query1', 'query2', 'query3']."}]}},"id":"55a8a512-f2d4-4aed-93e5-dd9bfa2dcaad","name":"Generate Search Queries using LLM","type":"@n8n/n8n-nodes-langchain.chainLlm","position":[560,240],"typeVersion":1.5},{"parameters":{"jsCode":"// Parse the input JSON string and split it into four chunks\nconst rawText = $json.text;\n\n// Remove Markdown JSON code blocks if present\nconst cleanedText = rawText.replace(/```json|```/g, '').trim();\n\ntry {\n    const jsonArray = JSON.parse(cleanedText);\n    if (!Array.isArray(jsonArray)) {\n        throw new Error('The JSON is not an array.');\n    }\n    const chunkSize = Math.ceil(jsonArray.length / 4);\n    const chunks = [];\n    for (let i = 0; i < jsonArray.length; i += chunkSize) {\n        chunks.push(jsonArray.slice(i, i + chunkSize));\n    }\n    return chunks.map(chunk => ({ json: { chunk } }));\n} catch (error) {\n    return [{ json: { error: error.message } }];\n}\n"},"id":"4ab360eb-858f-48b8-a00d-71867d4f0c93","name":"Parse and Chunk JSON Data","type":"n8n-nodes-base.code","position":[900,240],"typeVersion":2},{"parameters":{"url":"https://serpapi.com/search","authentication":"predefinedCredentialType","nodeCredentialType":"serpApi","sendQuery":true,"queryParameters":{"parameters":[{"name":"q","value":"={{ $('Parse and Chunk JSON Data').item.json.chunk }}"},{"name":"engine","value":"google"}]},"options":{}},"id":"5a3ac393-8355-449f-93cb-b98e8bee9b80","name":"Perform SerpAPI Search Request","type":"n8n-nodes-base.httpRequest","position":[1540,260],"typeVersion":4.2,"credentials":{"httpHeaderAuth":{"id":"mpGZ0OzOXVPCzlKq","name":"Together AI"},"serpApi":{"id":"tV3uXUoUUzLAplpS","name":"SerpAPI account"}}},{"parameters":{"url":"=https://r.jina.ai/{{ $json.url }}","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","options":{}},"id":"dad82469-830d-40fb-9f6b-b9fefef41267","name":"Perform Jina AI Analysis Request","type":"n8n-nodes-base.httpRequest","position":[2400,240],"typeVersion":4.2,"credentials":{"httpHeaderAuth":{"id":"uQTEcgRQqtbNKO1D","name":"Jina AI"}}},{"parameters":{"jsCode":"// Format the organic search results from SerpAPI\nconst results = $input.first().json.organic_results;\nif (results.length === 0) {\n  return [{ json: { error: 'No search results found.' } }];\n}\nconst formattedResults = results.map(result => ({\n  title: result.title || 'No title available',\n  url: result.link || 'No link available',\n  source: result.source || result.displayed_link || 'Unknown source'\n}));\nreturn formattedResults.map(result => ({ json: result }));\n"},"id":"e21bbdf6-a903-491e-920c-ef7576f9ce80","name":"Format SerpAPI Organic Results","type":"n8n-nodes-base.code","position":[1860,220],"typeVersion":2},{"parameters":{"promptType":"define","text":"=User Queries: {{ $('Parse and Chunk JSON Data').all().map(item => item.json.chunk[0]).join(', ') }}\nWebpage Contents: \n\"\"\"\n{{ $json.data }}\n\"\"\"","options":{"systemMessage":"=You are an expert information extractor. Given the user's query, the search query that led to this page, and the webpage content, extract all relevant pieces of information that are useful to answer the query. Return only the relevant context as plain text without any additional commentary."}},"id":"a856c8e8-5c3c-4a2f-9086-66deee1afd06","name":"Extract Relevant Context via LLM","type":"@n8n/n8n-nodes-langchain.agent","position":[1040,600],"typeVersion":1.7},{"parameters":{"promptType":"define","text":"=Extracted Contexts (Merged):\n\"\"\"\n{{ $json.output }}\n\"\"\"","options":{"systemMessage":"You are an expert researcher and report writer. Based on the gathered contexts and the original user query, generate a comprehensive, well-structured report. Include all relevant insights and conclusions without unnecessary commentary.\n\nFormat the report in Markdown with clear headings. For example:\n\n# Research Report: [User Query]\n\n## Key Findings\n- Point 1\n- Point 2\n\n## Detailed Analysis\n### Aspect 1\nSummary of findings.\n_Source:_ [Source Name](URL)\n\n### Aspect 2\nSummary of findings.\n_Source:_ [Another Source](URL)\n\nNow, generate the complete report."}},"id":"6d5c6698-0b4f-438c-91b9-3597f5d3e904","name":"Generate Comprehensive Research Report","type":"@n8n/n8n-nodes-langchain.agent","position":[1580,600],"typeVersion":1.7},{"parameters":{"options":{}},"id":"05fea6a1-791e-4980-8f2a-2960455066d7","name":"Split Data for SerpAPI Batching","type":"n8n-nodes-base.splitInBatches","position":[1220,240],"typeVersion":3},{"parameters":{"options":{}},"id":"df00e7e8-99b8-484a-8047-869474fefee9","name":"Split Data for Jina AI Batching","type":"n8n-nodes-base.splitInBatches","position":[2100,220],"typeVersion":3},{"parameters":{"sessionIdType":"customKey","sessionKey":"my_test_session","contextWindowLength":20},"id":"2edc683b-65f7-40c3-a22d-7fbf5b67de0a","name":"LLM Memory Buffer (Input Context)","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[1160,820],"typeVersion":1.3},{"parameters":{"sessionIdType":"customKey","sessionKey":"my_test_session","contextWindowLength":20},"id":"23017ae7-72a7-45c7-8edf-d0ba72220675","name":"LLM Memory Buffer (Report Context)","type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","position":[1640,840],"typeVersion":1.3},{"parameters":{},"id":"6bc9533b-e265-47b3-b93a-3a4f86ba0541","name":"Fetch Wikipedia Information","type":"@n8n/n8n-nodes-langchain.toolWikipedia","position":[1800,800],"typeVersion":1},{"parameters":{"content":"## SerpAPI Setup Instructions\n1. Obtain your API key from https://serpapi.com/manage-api-key.\n2. Save your API key securely in n8n credentials (do not use plain text).","height":140,"width":420,"color":7},"id":"b25c148e-047d-40a7-8818-94c3504828dd","name":"Sticky Note: SerpAPI Setup","type":"n8n-nodes-base.stickyNote","position":[1380,60],"typeVersion":1},{"parameters":{"content":"## Jina AI Setup Instructions\n1. Obtain your API key from https://jina.ai/api-dashboard/key-manager.\n2. Configure your Jina AI credential in n8n to ensure secure API access.","height":140,"width":420,"color":7},"id":"e69c9a85-31e4-42b9-a09a-683ec5bb97d1","name":"Sticky Note: Jina AI Setup","type":"n8n-nodes-base.stickyNote","position":[2260,40],"typeVersion":1},{"parameters":{"content":"## OpenRouter API Setup Instructions\n1. Obtain your API key from https://openrouter.ai/settings/keys.\n2. Set up your OpenRouter credential in n8n for secure integration.","height":180,"width":300,"color":7},"id":"dbd204e0-da8e-41d8-814b-f409a23e9573","name":"Sticky Note: OpenRouter API Setup","type":"n8n-nodes-base.stickyNote","position":[640,540],"typeVersion":1},{"parameters":{"modelName":"models/gemini-1.5-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[500,920],"id":"cea9bb85-5873-430c-9415-d8cbbc2e0dc1","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"Et4q5oYJBE7kF0BW","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"text":"=Data:\n{{ $('AI Agent').item.json.output }}\n\nAvailable categories:\n{{ $json.categories.toJsonString() }}","attributes":{"attributes":[{"name":"title","description":"Title of the research","required":true},{"name":"content","description":"Research content excluding the title","required":true},{"name":"category_id","description":"Recommended category id"}]},"options":{}},"type":"@n8n/n8n-nodes-langchain.informationExtractor","typeVersion":1,"position":[3900,600],"id":"d652b715-27fa-45c3-b648-0814b9181136","name":"Information Extractor"},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[3940,800],"id":"f3585f79-00e7-47dd-a446-6db6fe068718","name":"Google Gemini Chat Model1","credentials":{"googlePalmApi":{"id":"Et4q5oYJBE7kF0BW","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"promptType":"define","text":"=Research Report from various sources:\n{{ $json.research.toJsonString() }}\n","options":{"systemMessage":"=### **OBJECTIVE**  \nYour primary role is to generate well-written and structured blog posts based on research findings provided by another agent. The blog should be engaging, informative, and aligned with best practices for blog writing.\n\n---\n\n### **CONTEXT**  \n- You do **not** receive blog topics directly from the user. Instead, another agent provides research findings related to the given topic.  \n- You have access to a **vector store** containing a **blog_writing_guide** and **Wikipedia** as tools.  \n- You do not format the final output. Instead, another agent converts your response into a defined JSON structure.  \n- The **research findings** you receive are meant to **provide relevant information**, not dictate the exact content or structure of the blog. You must synthesize the information into a coherent article rather than summarizing the research reports directly.\n\n---\n\n### **INSTRUCTIONS**  \n#### **1. Processing Input Data**  \n- Extract **relevant insights** from the provided research findings.  \n- Identify key themes and trends related to the blog topic.  \n- Do **not** structure the blog as a direct summary of the findings. Instead, use them as supporting evidence.  \n- If the research findings indicate **\"No report can be generated\"**, proceed without referencing that particular source.  \n\n#### **2. Utilizing the Blog Writing Guide**  \n- Follow the best practices outlined in the **vector-stored blog writing guide** to ensure clarity, engagement, and readability.  \n- Use Wikipedia for additional context where necessary, but avoid direct plagiarism.  \n\n#### **3. Content Structuring**  \n- **Headline**: Create a compelling, SEO-friendly title.  \n- **Introduction**: Hook the reader with an engaging opening that introduces the topic and its relevance.  \n- **Main Body**:  \n  - Organize the content logically with headings and subheadings.  \n  - Integrate information from the research findings where appropriate, ensuring smooth transitions.  \n  - Include real-world examples, expert opinions, or statistics if applicable.  \n- **Conclusion**: Summarize key points and offer a closing statement, call-to-action, or thought-provoking insight.  \n\n#### **4. Writing Style & Clarity**  \n- Maintain a **conversational yet informative tone** suitable for blog readers.  \n- Use **simple, clear, and engaging language** while avoiding overly technical jargon.  \n- Ensure the text is **grammatically correct and free of spelling errors**.  \n\n#### **5. Quality Checks**  \n- Verify that the blog post **does not read like a research summary**.  \n- Ensure **logical flow and coherence** between sections.  \n- Maintain originality—**do not copy-paste research findings verbatim**.  \n\n---\n\n### **OUTPUT REQUIREMENTS**  \n- A **fully structured and engaging blog post**, formatted as a text output.  \n- The blog should be self-contained and **not rely on bullet points or raw data from the research findings**.  \n- The final output should be clear, **reader-friendly**, and suitable for publication on a blog.  \n\n---\n\n### **EXAMPLES**  \n#### **Incorrect Approach (What to Avoid)**  \n🚫 Writing a blog that **directly summarizes** the research findings, like:  \n*\"A study by Camchong et al. (2017) found that adolescent cannabis users had decreased functional connectivity in the frontal brain regions...\"*  \n\n#### **Correct Approach (What to Follow)**  \n✅ Writing a blog that **integrates** findings into a broader discussion, like:  \n*\"Adolescence is a crucial time for brain development, yet many young individuals are experimenting with cannabis. While some argue that marijuana has minimal long-term effects, recent research suggests otherwise. Studies indicate that frequent cannabis use during adolescence may affect cognitive functions such as memory and decision-making. For example, one study found that...\"*"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[3240,600],"id":"dcc26e81-5621-4434-b56e-234098e8a554","name":"AI Agent"},{"parameters":{"sessionIdType":"customKey","sessionKey":"my_session"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[3300,780],"id":"c75b1ae1-036d-4e48-bed7-6c0159170656","name":"Window Buffer Memory"},{"parameters":{"modelName":"models/text-embedding-004"},"type":"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini","typeVersion":1,"position":[3280,1040],"id":"9354e23b-54d8-4db4-bf44-ea63b69927e9","name":"Embeddings Google Gemini","credentials":{"googlePalmApi":{"id":"Et4q5oYJBE7kF0BW","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"mode":"retrieve-as-tool","toolName":"blog_writing_guide","toolDescription":"Contains data on how to write blog posts","pineconeIndex":{"__rl":true,"value":"bigaddictshop","mode":"list","cachedResultName":"bigaddictshop"},"topK":7,"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1,"position":[3380,980],"id":"1d42d97c-194e-46ad-b773-ad274259e872","name":"Blog writing guide","credentials":{"pineconeApi":{"id":"vInqyUyAMOXxj4ke","name":"PineconeApi account"}}},{"parameters":{"url":"https://bigaddict.shop/api/categories","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[3600,600],"id":"da7adc20-3507-46f8-b40e-32a1e2adc4b2","name":"Get Categories","credentials":{"httpHeaderAuth":{"id":"Mu09wGOOgUYJeHiU","name":"bigaddict_shop"}}},{"parameters":{"jsCode":"// Initialize an empty array to store all item data\nlet mergedData = [];\n\n// Loop through each item and collect its JSON content\n$input.all().forEach(item => {\n    mergedData.push(item.json);\n});\n\n// Return a single item with all merged data inside \"research\"\nreturn [{ json: { research: mergedData } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2340,600],"id":"5149d127-911f-4621-86a5-fc488e4b639e","name":"Merge outputs"},{"parameters":{"mode":"markdownToHtml","markdown":"={{ $json.output.content }}","destinationKey":"content_html","options":{}},"type":"n8n-nodes-base.markdown","typeVersion":1,"position":[4260,600],"id":"1cc8a4b2-c49c-4ad1-b42b-08bc94abab22","name":"Markdown"},{"parameters":{"method":"POST","url":"https://bigaddict.shop/api/create-post/","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"bodyParameters":{"parameters":[{"name":"title","value":"={{ $json.output.title }}"},{"name":"content","value":"={{ $json.content_html }}"},{"name":"category_id","value":"={{ $json.output.category_id }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4480,600],"id":"33a7447a-dbf8-4ca1-aa91-e14cfd33a713","name":"Send to BigAddict.shop as Draft","credentials":{"httpHeaderAuth":{"id":"Mu09wGOOgUYJeHiU","name":"bigaddict_shop"}}},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.toolWikipedia","typeVersion":1,"position":[3560,960],"id":"41e0193e-5287-40d7-b0f8-2e1630fac031","name":"Wikipedia"},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[3060,780],"id":"756c1a22-4914-4ca1-8fca-be6cf6326890","name":"Google Gemini Chat Model2","credentials":{"googlePalmApi":{"id":"Et4q5oYJBE7kF0BW","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"method":"POST","url":"https://ntfy.sh/bigaddict079","sendBody":true,"contentType":"raw","rawContentType":"text/html","body":"=Draft blog Post Made successfully at {{ $now.toString() }}\n\nTitle: {{ $('Markdown').item.json.output.title }}\nPost ID: {{ $json.post_id }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4760,600],"id":"98dd2f17-33cc-4585-9737-62a27eba3241","name":"Push notification to my phone"},{"parameters":{"assignments":{"assignments":[{"id":"56c5a11c-f467-434e-8e84-a039dd87725f","name":"message","value":"={{ $json.message }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[4980,600],"id":"6d0888a4-1818-4d20-9827-ce78353e6884","name":"Edit Fields"}],"connections":{"Chat Message Trigger":{"main":[[{"node":"Generate Search Queries using LLM","type":"main","index":0}]]},"Parse and Chunk JSON Data":{"main":[[{"node":"Split Data for SerpAPI Batching","type":"main","index":0}]]},"Fetch Wikipedia Information":{"ai_tool":[[{"node":"Generate Comprehensive Research Report","type":"ai_tool","index":0}]]},"Format SerpAPI Organic Results":{"main":[[{"node":"Split Data for Jina AI Batching","type":"main","index":0}]]},"Perform SerpAPI Search Request":{"main":[[{"node":"Split Data for SerpAPI Batching","type":"main","index":0}]]},"Split Data for Jina AI Batching":{"main":[[{"node":"Extract Relevant Context via LLM","type":"main","index":0}],[{"node":"Perform Jina AI Analysis Request","type":"main","index":0}]]},"Split Data for SerpAPI Batching":{"main":[[{"node":"Format SerpAPI Organic Results","type":"main","index":0}],[{"node":"Perform SerpAPI Search Request","type":"main","index":0}]]},"Extract Relevant Context via LLM":{"main":[[{"node":"Generate Comprehensive Research Report","type":"main","index":0}]]},"Perform Jina AI Analysis Request":{"main":[[{"node":"Split Data for Jina AI Batching","type":"main","index":0}]]},"Generate Search Queries using LLM":{"main":[[{"node":"Parse and Chunk JSON Data","type":"main","index":0}]]},"LLM Memory Buffer (Input Context)":{"ai_memory":[[{"node":"Extract Relevant Context via LLM","type":"ai_memory","index":0}]]},"LLM Memory Buffer (Report Context)":{"ai_memory":[[{"node":"Generate Comprehensive Research Report","type":"ai_memory","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"Generate Search Queries using LLM","type":"ai_languageModel","index":0},{"node":"Extract Relevant Context via LLM","type":"ai_languageModel","index":0},{"node":"Generate Comprehensive Research Report","type":"ai_languageModel","index":0}]]},"Generate Comprehensive Research Report":{"main":[[{"node":"Merge outputs","type":"main","index":0}]]},"Google Gemini Chat Model1":{"ai_languageModel":[[{"node":"Information Extractor","type":"ai_languageModel","index":0}]]},"AI Agent":{"main":[[{"node":"Get Categories","type":"main","index":0}]]},"Window Buffer Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Embeddings Google Gemini":{"ai_embedding":[[{"node":"Blog writing guide","type":"ai_embedding","index":0}]]},"Blog writing guide":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Get Categories":{"main":[[{"node":"Information Extractor","type":"main","index":0}]]},"Merge outputs":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Information Extractor":{"main":[[{"node":"Markdown","type":"main","index":0}]]},"Markdown":{"main":[[{"node":"Send to BigAddict.shop as Draft","type":"main","index":0}]]},"Wikipedia":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"Google Gemini Chat Model2":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Send to BigAddict.shop as Draft":{"main":[[{"node":"Push notification to my phone","type":"main","index":0}]]},"Push notification to my phone":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateId":"2883","templateCredsSetupCompleted":true},"pinData":{},"versionId":"cbcba7e6-ce5a-43ac-adff-507612845cb8","triggerCount":2,"tags":[]}