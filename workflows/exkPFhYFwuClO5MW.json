{
  "active": false,
  "connections": {
    "Reddit": {
      "main": [
        [
          {
            "node": "Filter Relevant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Relevant": {
      "main": [
        [
          {
            "node": "Fetch Important data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Important data": {
      "main": [
        [
          {
            "node": "Decision maker",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Decision maker",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Decision maker",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Decision maker": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Get business related ones only",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get business related ones only": {
      "main": [
        [
          {
            "node": "Summarization Chain",
            "type": "main",
            "index": 0
          },
          {
            "node": "Generate ideas",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Summarization Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Summarization Chain": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Generate ideas",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        []
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Reddit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate ideas": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-19T21:44:23.410Z",
  "id": "exkPFhYFwuClO5MW",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Reddit Scrapper",
  "nodes": [
    {
      "parameters": {
        "operation": "search",
        "location": "allReddit",
        "keyword": "looking for a solution",
        "additionalFields": {
          "sort": "hot"
        }
      },
      "type": "n8n-nodes-base.reddit",
      "typeVersion": 1,
      "position": [
        260,
        0
      ],
      "id": "4da4a6f4-0bd1-4da6-b76b-e9552fe24648",
      "name": "Reddit",
      "credentials": {
        "redditOAuth2Api": {
          "id": "dpUd14WezBums76z",
          "name": "Reddit account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "09da3b3b-6810-4cb0-9eb6-a71aa0273646",
              "name": "upvotes",
              "value": "={{ $json.ups }}",
              "type": "string"
            },
            {
              "id": "1dedcc2f-48bb-4b65-b753-9175086b57a9",
              "name": "subreddit_size",
              "value": "={{ $json.subreddit_subscribers }}",
              "type": "string"
            },
            {
              "id": "17c2e174-d652-45d8-8d89-d981e6dd9f9a",
              "name": "original_post",
              "value": "={{ $json.selftext }}",
              "type": "string"
            },
            {
              "id": "357fe867-917c-4664-947d-e3d3b1975a84",
              "name": "sub_reddit",
              "value": "={{ $json.subreddit }}",
              "type": "string"
            },
            {
              "id": "cb10e48d-f102-436e-a66d-bca6c453b42b",
              "name": "date",
              "value": "={{ DateTime.fromSeconds($json.created).toLocaleString() }}",
              "type": "string"
            },
            {
              "id": "7b15c624-1e06-433c-a5f7-9962037575c0",
              "name": "url",
              "value": "={{ $json.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        740,
        20
      ],
      "id": "56fb4ffb-054c-4187-886b-8bec0f60bc5d",
      "name": "Fetch Important data"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bd424ae8-ae49-493e-a3df-c4c33c68cb4c",
              "leftValue": "={{ $json.ups }}",
              "rightValue": 2,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            },
            {
              "id": "2f6b7de8-c23b-4092-9056-eceace82c264",
              "leftValue": "={{ $json.selftext }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "c4723f98-97dd-4f8f-91cc-700c67d64478",
              "leftValue": "={{ DateTime.fromSeconds($json.created).toISO() }}",
              "rightValue": "={{ $today.minus({days: 14}).toISO() }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        480,
        0
      ],
      "id": "9b492c7c-28cd-4ca8-b8d5-19b256237ff1",
      "name": "Filter Relevant"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        660,
        -340
      ],
      "id": "e9d21444-0d16-405e-806a-d1a251451656",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Et4q5oYJBE7kF0BW",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"decision\": \"`Yes` or `No`\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        920,
        -80
      ],
      "id": "b2931aa5-8b61-484d-b65a-40d4a679261c",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {
          "includeUnpaired": true
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1380,
        -80
      ],
      "id": "993642ef-bfaa-45be-994e-2cdb1c1c6deb",
      "name": "Merge"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Decide whether this reddit post is describing a business-related problem or need a solution. The post should mention a specific challange or requirement that a business is trying to address.\n\n<Reddit Post>\n{{ $json.original_post }}\n</Reddit Post>\n\nIs this post about a business problem or need for a solution?\n\nOutput format: { \"business_related\": \"Yes or No\" }",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        920,
        -280
      ],
      "id": "2f6ef371-5aec-4cd2-b43a-f1d3db9d2fd4",
      "name": "Decision maker"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "686becdb-7e05-4930-804b-52f8cc911304",
              "leftValue": "={{ $json.output.decision }}",
              "rightValue": "Yes",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1600,
        0
      ],
      "id": "c640f3c5-6e20-42fa-8bd8-3d0eab79bc0a",
      "name": "Get business related ones only"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "typeVersion": 2,
      "position": [
        1840,
        -340
      ],
      "id": "2ee52ece-7a42-44e3-99aa-a6d4dc4398d4",
      "name": "Summarization Chain"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1680,
        -320
      ],
      "id": "91c87af1-47c8-4694-89b5-5f745fa16ece",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "Et4q5oYJBE7kF0BW",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-thinking-exp",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1920,
        -200
      ],
      "id": "5834a0d1-015f-4b44-89c7-0cb3cd43a81c",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "Et4q5oYJBE7kF0BW",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "numberInputs": 3,
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        2280,
        340
      ],
      "id": "c801d278-7790-49b2-b03b-cee065991597",
      "name": "Merge1"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "query"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "6033e0bf-7d33-4997-8ece-196a4d4b42c2",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Based on the following Reddit post, suggest a business idea or service that i could create to help solve this problem for this business and others with similar needs.\n\n<Reddit Post>\n{{ $('Get business related ones only').item.json.original_post }}\n<Reddit Post>\n\nProvide a concise description of a business idea or service that would address this issue effectively for multiple businesses facing similar challanges."
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1860,
        -20
      ],
      "id": "ef6ea240-55aa-4853-b14c-79d89d033caa",
      "name": "Generate ideas"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-02-23T13:34:20.756Z",
  "versionId": "f5afd6b3-14b5-4128-b67f-7439ace0e73c"
}