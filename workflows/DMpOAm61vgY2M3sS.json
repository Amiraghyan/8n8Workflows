{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Fetch required details from webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Find out if it a transaction and it's direction",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Reply for not transactions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch required details from webhook": {
      "main": [
        [
          {
            "node": "Find out if it a transaction and it's direction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find out if it a transaction and it's direction": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format the final data": {
      "main": [
        [
          {
            "node": "Reply with formatted data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Find out if it a transaction and it's direction",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Extract transaction details",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Extract transaction details": {
      "main": [
        [
          {
            "node": "Format the final data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract transaction details",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract transaction details1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format the final data1": {
      "main": [
        [
          {
            "node": "Reply with formatted data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Extract transaction details1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Extract transaction details1": {
      "main": [
        [
          {
            "node": "Format the final data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-19T07:27:15.428Z",
  "id": "DMpOAm61vgY2M3sS",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Transaction Parser",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "sms/finace",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        432
      ],
      "id": "462210fa-41f4-4891-a149-6306b0d55bdc",
      "name": "Webhook",
      "webhookId": "abd8a4f8-1a98-4fec-ac19-07390739ce36"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"istransaction\": \"True\",\n  \"direction\": \"sent\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        608,
        656
      ],
      "id": "d281d6f0-511a-45b4-a927-ae716f741979",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0ed39814-b7f1-4cae-81db-85f8e756537c",
              "leftValue": "={{ $json.output.istransaction }}",
              "rightValue": "True",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        848,
        432
      ],
      "id": "c2c4178e-be21-495b-9312-0023be9b510f",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "51b15928-8e0e-49cd-b05a-3a72d64230b4",
              "name": "body.user_id",
              "value": "={{ $json.body.user_id }}",
              "type": "number"
            },
            {
              "id": "9331481b-b073-4081-b506-fe1611d6f841",
              "name": "body.message",
              "value": "={{ $json.body.message }}",
              "type": "string"
            },
            {
              "id": "53b9b00a-472f-41f6-b5b1-d1c194a1d28b",
              "name": "body.from",
              "value": "={{ $json.body.from }}",
              "type": "string"
            },
            {
              "id": "033f51ec-4790-46ff-b722-e35093c49202",
              "name": "body.time",
              "value": "={{ $json.body.time }}",
              "type": "string"
            },
            {
              "id": "851df70c-21ed-4df7-b4c0-a1fb6706db45",
              "name": "body.formatted_message",
              "value": "={{ $json.body.formatted_message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        432
      ],
      "id": "8dd0caaf-43f0-46a0-8f29-aa64c878cfdd",
      "name": "Fetch required details from webhook"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.message }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "You are a Decision making assistant. You are provided with an sms content and your task is to decide whether the sms is a money transaction or not. If it's a transation you find out if the money was sent or recieved.\n\nHere is an example of the output required.\nExample 1:\n{\n  \"istransaction\": \"True\",\n  \"direction\": \"money in\"\n}\nExample 2:\n{\n  \"istransaction\": \"True\",\n  \"direction\": \"money out\"\n}\nExample 3:\n{\n  \"istransaction\": \"False\",\n  \"direction\": \"\"\n}"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        448,
        432
      ],
      "id": "8cc3571d-9552-44f1-a0c0-e4f82ba4629c",
      "name": "Find out if it a transaction and it's direction"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3603e184-1781-42f3-9bc7-c9b42ef9b11e",
              "name": "user_id",
              "value": "={{ $('Fetch required details from webhook').item.json.body.user_id }}",
              "type": "number"
            },
            {
              "id": "938b2618-c1dd-4946-a9da-0aacd9bae156",
              "name": "from",
              "value": "={{ $('Fetch required details from webhook').item.json.body.from }}",
              "type": "string"
            },
            {
              "id": "e3a57638-8e9e-40b5-83c5-5adb2dbad32d",
              "name": "time",
              "value": "={{ $('Fetch required details from webhook').item.json.body.time }}",
              "type": "string"
            },
            {
              "id": "62d7306f-c903-4032-8c0a-e4da650e7a2c",
              "name": "direction",
              "value": "={{ $('Find out if it a transaction and it\\'s direction').item.json.output.direction }}",
              "type": "string"
            },
            {
              "id": "06a963a7-a49a-4a72-88fe-fc3eead12ede",
              "name": "amount",
              "value": "={{ $json.output.amount }}",
              "type": "number"
            },
            {
              "id": "bc36ab40-2b89-4c26-a7d9-3e933795dd3c",
              "name": "balance",
              "value": "={{ $json.output.balance }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1696,
        144
      ],
      "id": "71dcad5a-cc1e-4a54-aa0b-962535675c3a",
      "name": "Format the final data"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1920,
        144
      ],
      "id": "6ea5cbaf-ca7c-487d-b15f-45e7f60db6c1",
      "name": "Reply with formatted data"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "Not a Transaction",
        "options": {
          "responseCode": 422
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1072,
        528
      ],
      "id": "3dc1dcb3-eec2-459d-b327-717a8a9e5cc7",
      "name": "Reply for not transactions"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        480,
        656
      ],
      "id": "5e5c18ed-827e-4dbb-9ba7-3492b872ebbf",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "CBhmsxFnGfPZD6YU",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1392,
        256
      ],
      "id": "cb56dea0-6b2e-4029-9286-1f7c4715ed45",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "CBhmsxFnGfPZD6YU",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $('Fetch required details from webhook').item.json.body.message }}",
        "attributes": {
          "attributes": [
            {
              "name": "amount",
              "type": "number",
              "description": "The amount sent or spent.",
              "required": true
            },
            {
              "name": "balance",
              "type": "number",
              "description": "The new balance is indicated, if not default to -1",
              "required": true
            },
            {
              "name": "description",
              "description": "Describe the cash out from the account",
              "required": true
            },
            {
              "name": "fee",
              "description": "Transaction cost or transaction fee",
              "required": true
            },
            {
              "name": "account",
              "description": "The account used. If not provided use `Not provided` as default",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        1296,
        32
      ],
      "id": "f0b325e8-7e1d-48ec-bb35-595009dfdfa2",
      "name": "Extract transaction details"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output.direction }}",
                    "rightValue": "money out",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "0bd74ddd-cc6c-42d6-b217-00fb1ed10dd4"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "money out"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6fa3d122-2717-411f-8623-1de274c970a2",
                    "leftValue": "={{ $json.output.direction }}",
                    "rightValue": "money in",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "money in"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1072,
        336
      ],
      "id": "0a2c9523-32e4-4384-baf5-5c87b3cdff9f",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3603e184-1781-42f3-9bc7-c9b42ef9b11e",
              "name": "user_id",
              "value": "={{ $('Fetch required details from webhook').item.json.body.user_id }}",
              "type": "number"
            },
            {
              "id": "938b2618-c1dd-4946-a9da-0aacd9bae156",
              "name": "from",
              "value": "={{ $('Fetch required details from webhook').item.json.body.from }}",
              "type": "string"
            },
            {
              "id": "e3a57638-8e9e-40b5-83c5-5adb2dbad32d",
              "name": "time",
              "value": "={{ $('Fetch required details from webhook').item.json.body.time }}",
              "type": "string"
            },
            {
              "id": "62d7306f-c903-4032-8c0a-e4da650e7a2c",
              "name": "direction",
              "value": "={{ $('Find out if it a transaction and it\\'s direction').item.json.output.direction }}",
              "type": "string"
            },
            {
              "id": "06a963a7-a49a-4a72-88fe-fc3eead12ede",
              "name": "amount",
              "value": "={{ $json.output.amount }}",
              "type": "number"
            },
            {
              "id": "bc36ab40-2b89-4c26-a7d9-3e933795dd3c",
              "name": "balance",
              "value": "={{ $json.output.balance }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1696,
        544
      ],
      "id": "976668ea-b35c-4721-af98-d2b434d6353a",
      "name": "Format the final data1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1920,
        544
      ],
      "id": "e306ac93-ce50-4d9d-85f9-a15b6022f26a",
      "name": "Reply with formatted data1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1392,
        768
      ],
      "id": "e849e0ce-0bfb-4b1d-91e9-3dce60e6f910",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "CBhmsxFnGfPZD6YU",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $('Fetch required details from webhook').item.json.body.message }}",
        "attributes": {
          "attributes": [
            {
              "name": "amount",
              "type": "number",
              "description": "The amount recieved.",
              "required": true
            },
            {
              "name": "balance",
              "type": "number",
              "description": "The new balance is indicated, if not default to -1",
              "required": true
            },
            {
              "name": "description",
              "description": "Describe the cash in to the account",
              "required": true
            },
            {
              "name": "account",
              "description": "The account used. If not provided use `Not provided` as default",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        1296,
        544
      ],
      "id": "36866cec-6c6f-405f-8a93-5b2a54f18b17",
      "name": "Extract transaction details1"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-07-20T18:46:18.000Z",
  "versionId": "810e97ad-28df-45df-a0e7-3e04157018b2"
}