{
  "active": false,
  "connections": {
    "Get Posts": {
      "main": [
        [
          {
            "node": "Fetch only required fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analysis Content  By AI": {
      "main": [
        [
          {
            "node": "Merge post with AI analytics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Posts By Features": {
      "main": [
        [
          {
            "node": "Analysis Content  By AI",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge post with AI analytics",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Get Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Proper Solutions": {
      "main": [
        [
          {
            "node": "Combine Sumary, solution and posts.",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Fetch only required fields": {
      "main": [
        [
          {
            "node": "Filter Posts By Features",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set subreddit database id": {
      "main": [
        [
          {
            "node": "Merge subreddit DB ID with reddit post",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Find Proper Solutions",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Find the Real Problem and It's cause",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Merge post with AI analytics": {
      "main": [
        [
          {
            "node": "Filter business related posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter business related posts": {
      "main": [
        [
          {
            "node": "Insert or update Subreddits",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge subreddit DB ID with reddit post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert or update Subreddits": {
      "main": [
        [
          {
            "node": "Set subreddit database id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge subreddit DB ID with reddit post": {
      "main": [
        [
          {
            "node": "Insert Posts to Database.",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Posts to Database.": {
      "main": [
        [
          {
            "node": "Find the Real Problem and It's cause",
            "type": "main",
            "index": 0
          },
          {
            "node": "Combine Sumary, solution and posts.",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Find the Real Problem and It's cause": {
      "main": [
        [
          {
            "node": "Combine Sumary, solution and posts.",
            "type": "main",
            "index": 0
          },
          {
            "node": "Find Proper Solutions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine Sumary, solution and posts.": {
      "main": [
        [
          {
            "node": "Add or update post summaries",
            "type": "main",
            "index": 0
          },
          {
            "node": "Add or update solutions to posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Analysis Content  By AI",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Find the Real Problem and It's cause",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-14T08:22:55.050Z",
  "id": "wZbuTWwWgzjgaixj",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Business Finder Reddit",
  "nodes": [
    {
      "parameters": {},
      "id": "f518ab76-0704-487e-b852-af8f7baf0740",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -2620,
        205
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "0823d10a-ad54-4d82-bcea-9dd236e97857",
              "operator": {
                "type": "number",
                "operation": "gt"
              },
              "leftValue": "={{ $json.ups }}",
              "rightValue": 2
            },
            {
              "id": "bb8187aa-f0f1-4999-8d4b-bdc9abba0618",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.selftext }}",
              "rightValue": ""
            },
            {
              "id": "539f0f5c-025a-4f82-9b3a-2ef1ad3a2d96",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              },
              "leftValue": "={{ $json.created }}",
              "rightValue": "={{ $today.minus(180,'days').toISO() }}"
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0ffca246-5a69-41d0-bc58-fe644194054a",
      "name": "Filter Posts By Features",
      "type": "n8n-nodes-base.if",
      "position": [
        -1960,
        205
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "=Decide whether this reddit post is describing a business-related problem or a need for a solution. The post should mention a specific challenge \n or requirement that a business is trying to address.\nReddit post:  {{ $json.selftext }}\nIs this post about a business problem or need for a solution ? Output only yes or no",
        "options": {}
      },
      "id": "d291e29b-0530-4f28-b049-5a1e4670e268",
      "name": "Analysis Content  By AI",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -1740,
        80
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "operation": "search",
        "subreddit": "smallbusiness",
        "keyword": "looking for a solution",
        "limit": 20,
        "additionalFields": {
          "sort": "hot"
        }
      },
      "id": "1179ff74-d2c1-4954-a9c9-23ea8ec9921f",
      "name": "Get Posts",
      "type": "n8n-nodes-base.reddit",
      "position": [
        -2400,
        200
      ],
      "typeVersion": 1,
      "credentials": {
        "redditOAuth2Api": {
          "id": "6fhhT8MLnJpBPbPW",
          "name": "Reddit account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<Reddit Post Title>\n{{ $('Insert Posts to Database.').item.json.title }}\n</Reddit Post Title>\n<Reddit post>\n{{ $('Insert Posts to Database.').item.json.content }}\n</Reddit post>\n<Indentified Problem>\n{{ $json.output.problem }}\n</indentified Problem>\n<Indentified Cause>\n{{ $json.output.cause }}\n</indentified Cause>",
        "messages": {
          "messageValues": [
            {
              "message": "You are provided with reddit post with it's title. We have also tried to find the problem at hand and the cause. The aim is to come up with the most effective and feasible solution for the businesses., suggest a business idea or service that I could create to help this problem for this business and other with similar needs.\n\nProvide a concise description of a business idea or service that would adress this issue effectively for mutiple businesses facing similar challenges."
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        340,
        160
      ],
      "id": "f9875ad0-6911-447b-8721-792a9180a724",
      "name": "Find Proper Solutions"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "329717f1-6293-4fd2-93f0-51dce182c2dc",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "70c20334-16f2-4dab-8da8-b8a6539191ba",
              "name": "subreddit",
              "value": "={{ $json.subreddit }}",
              "type": "string"
            },
            {
              "id": "b558fb2f-7341-4086-8280-ccd3aa3ff201",
              "name": "subreddit_subscribers",
              "value": "={{ $json.subreddit_subscribers.toString() }}",
              "type": "string"
            },
            {
              "id": "131800e4-36e7-4bcb-96dd-05380deb0e9b",
              "name": "title",
              "value": "={{ $json.title }}",
              "type": "string"
            },
            {
              "id": "f5a47e4a-6f1f-4fcf-95b4-b07e76c4e282",
              "name": "url",
              "value": "={{ $json.url }}",
              "type": "string"
            },
            {
              "id": "422c0ebd-e08c-4e4b-b97a-9fe3e76df56f",
              "name": "ups",
              "value": "={{ $json.ups }}",
              "type": "number"
            },
            {
              "id": "3219b1b0-ce80-4532-b443-0a4962a62d36",
              "name": "selftext",
              "value": "={{ $json.selftext }}",
              "type": "string"
            },
            {
              "id": "bb25ff8c-d3e2-41f1-b7b3-75168fac1e4f",
              "name": "created",
              "value": "={{ DateTime.fromSeconds($json.created).toISO() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2180,
        205
      ],
      "id": "11b69e58-ccff-47af-9c41-6793706f04d9",
      "name": "Fetch only required fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "66e39734-c569-4061-b22a-6fd70a8faff6",
              "name": "subreddit_id",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -704,
        280
      ],
      "id": "1ccdf18a-40eb-4799-9059-d31db811af37",
      "name": "Set subreddit database id"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        400,
        380
      ],
      "id": "00c0edae-9ca4-4079-8b5e-f923812a986a",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Lv8LqTGpfGzDWuiH",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n    \"problem\": \"The business owner experienced a major decline in client workload and revenue compared to previous successful years.\",\n    \"cause\": \"Instead of focusing on client outreach and direct sales, the owner diverted time and resources into acquiring new certifications and revamping the business model, assuming a complex solution was needed. Additionally, they had a reluctance toward direct sales activities.\"\n  }"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        104,
        300
      ],
      "id": "b85bbc16-1a30-4a3f-9825-0fbc6f16649f",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -1364,
        205
      ],
      "id": "df15698e-980a-4bf8-bb85-e5d4355e7a30",
      "name": "Merge post with AI analytics"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "490c5138-c488-498f-9ba2-e9ac70f76c31",
              "leftValue": "={{ $json.output }}",
              "rightValue": "/\\byes\\b/i",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1144,
        205
      ],
      "id": "824fc1b9-1ed9-400f-8b2b-906e9b747dfc",
      "name": "Filter business related posts"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "posts_subreddit",
          "mode": "list",
          "cachedResultName": "posts_subreddit"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $json.subreddit }}",
            "subscriber_count": "={{ $json.subreddit_subscribers }}"
          },
          "matchingColumns": [
            "name"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "subscriber_count",
              "displayName": "subscriber_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -924,
        280
      ],
      "id": "7865a5bc-fae1-4f7b-9bdf-975917ebeebb",
      "name": "Insert or update Subreddits",
      "credentials": {
        "postgres": {
          "id": "STEiiGYKeUTcdagW",
          "name": "AIVEN pain2profit"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -484,
        205
      ],
      "id": "ca36a940-4dad-4bc4-9372-1ecbd85f6285",
      "name": "Merge subreddit DB ID with reddit post"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "posts_redditpost",
          "mode": "list",
          "cachedResultName": "posts_redditpost"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "is_processed": false,
            "upvotes": "={{ $json.ups }}",
            "subreddit_id": "={{ $json.subreddit_id }}",
            "title": "={{ $json.title }}",
            "post_url": "={{ $json.url }}",
            "content": "={{ $json.selftext }}",
            "posted_at": "={{ $json.created }}",
            "post_id": "={{ $json.id }}"
          },
          "matchingColumns": [
            "post_id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "post_url",
              "displayName": "post_url",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "upvotes",
              "displayName": "upvotes",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "posted_at",
              "displayName": "posted_at",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "is_processed",
              "displayName": "is_processed",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "subreddit_id",
              "displayName": "subreddit_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "post_id",
              "displayName": "post_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -264,
        205
      ],
      "id": "53ec2970-2849-4717-a0a3-484f17604bd8",
      "name": "Insert Posts to Database.",
      "credentials": {
        "postgres": {
          "id": "STEiiGYKeUTcdagW",
          "name": "AIVEN pain2profit"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<Reddit Post Title>\n{{ $json.title }}\n</Reddit Post Title>\n\n<Reddit post>\n{{ $json.content }}\n</Reddit post>",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "<task>\nYou are tasked with analyzing a Reddit post containing a business or personal problem.\n\nIdentify and extract two key pieces of information:\n1. The **core problem** the poster is experiencing. (Clearly and briefly stated)\n2. The **main cause(s)** that led to this problem. (Provide logical or stated reasons based on the post)\n\nWrite in a professional yet accessible tone. Do not invent information that is not mentioned or logically implied by the original post.\n\nYour response must ONLY output a JSON array containing one or more objects. Each object should have exactly two fields: \"problem\" and \"cause\".\n\nDo not include any additional commentary, greetings, or explanations outside the JSON output.\n\nKeep each field concise but informative (2-5 sentences each).\n</task>\n\n<Example Output>\n{\n    \"problem\": \"The business owner experienced a major decline in client workload and revenue compared to previous successful years.\",\n    \"cause\": \"Instead of focusing on client outreach and direct sales, the owner diverted time and resources into acquiring new certifications and revamping the business model, assuming a complex solution was needed. Additionally, they had a reluctance toward direct sales activities.\"\n  }\n</Example Output>"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        -44,
        80
      ],
      "id": "2cbb0a1d-373a-47a0-b8c7-63c8bbb574a8",
      "name": "Find the Real Problem and It's cause"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "numberInputs": 3,
        "options": {}
      },
      "id": "92706470-3bc7-47d8-99a6-3b9f4b0b5a15",
      "name": "Combine Sumary, solution and posts.",
      "type": "n8n-nodes-base.merge",
      "position": [
        700,
        160
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "solutions_postsummary",
          "mode": "list",
          "cachedResultName": "solutions_postsummary"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "post_id": "={{ $json.id }}",
            "cause": "={{ $json.output.cause }}",
            "problem": "={{ $json.output.problem }}"
          },
          "matchingColumns": [
            "post_id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "cause",
              "displayName": "cause",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "post_id",
              "displayName": "post_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "problem",
              "displayName": "problem",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        928,
        105
      ],
      "id": "19c0d95b-2426-4c1a-9a62-3c4df44e734d",
      "name": "Add or update post summaries",
      "credentials": {
        "postgres": {
          "id": "STEiiGYKeUTcdagW",
          "name": "AIVEN pain2profit"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "solutions_postsolution",
          "mode": "list",
          "cachedResultName": "solutions_postsolution"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "is_premium": true,
            "post_id": "={{ $json.id }}",
            "solution": "={{ $json.text }}"
          },
          "matchingColumns": [
            "post_id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "solution",
              "displayName": "solution",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "is_premium",
              "displayName": "is_premium",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": false
            },
            {
              "id": "post_id",
              "displayName": "post_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        920,
        300
      ],
      "id": "3304bd51-a0d8-4397-ac64-869251932dc5",
      "name": "Add or update solutions to posts",
      "credentials": {
        "postgres": {
          "id": "STEiiGYKeUTcdagW",
          "name": "AIVEN pain2profit"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1652,
        300
      ],
      "id": "e4bddcc9-85a9-4236-b251-04d51f8ac98d",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "ZBtkKEVmgRcWvWO5",
          "name": "Google Gemini(PaLM) Api account 3"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro-exp-03-25",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -60,
        300
      ],
      "id": "dd453305-0ec4-47e3-b9c2-c395854f84ab",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "ZBtkKEVmgRcWvWO5",
          "name": "Google Gemini(PaLM) Api account 3"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-04-29T11:55:00.000Z",
  "versionId": "1f8c0722-bf45-4a1b-9845-d40adc5d2606"
}