{"createdAt":"2025-02-10T19:46:50.967Z","updatedAt":"2025-03-23T17:31:47.386Z","id":"IffJYifxyMuwTdn3","name":"AI-Powered Social Media Amplifier","active":true,"nodes":[{"parameters":{"url":"https://news.ycombinator.com/","options":{"response":{"response":{"fullResponse":true,"neverError":true}}}},"id":"814303e0-5fe9-474e-a4ed-e4a728fd4acf","name":"Crawl HN Home","type":"n8n-nodes-base.httpRequest","position":[600,-60],"executeOnce":true,"typeVersion":4.2,"alwaysOutputData":true},{"parameters":{"language":"python","pythonCode":"# Import necessary modules\nimport asyncio\nimport micropip\n\n# Define an asynchronous function to install packages\nasync def install_packages():\n    await micropip.install(\"beautifulsoup4\")\n    await micropip.install(\"simplejson\")\n\n# Run the asynchronous package installation\nasyncio.get_event_loop().run_until_complete(install_packages())\n\n# Now, import the installed packages\nimport simplejson as json\nfrom bs4 import BeautifulSoup\n\n# Retrieve the HTML content from the first item in the input\n# Assuming n8n passes data as a list of items, each with a 'json' key\nhtml_content = items[0].get('json', {}).get('data', '')\n\n# Initialize BeautifulSoup with the HTML content\nsoup = BeautifulSoup(html_content, 'html.parser')\n\n# Initialize a list to store metadata of GitHub posts\ngithub_posts = []\n\n# Find all 'tr' elements with class 'athing submission'\nposts = soup.find_all('tr', class_='athing submission')\n\nfor post in posts:\n    post_id = post.get('id')\n    title_line = post.find('span', class_='titleline')\n    if not title_line:\n        continue  # Skip if titleline is not found\n\n    # Extract the title and URL\n    title_tag = title_line.find('a')\n    if not title_tag:\n        continue  # Skip if title tag is not found\n\n    title = title_tag.get_text(strip=True)\n    url = title_tag.get('href', '')\n\n    # Check if the URL is a GitHub link\n    if 'github.com' not in url.lower():\n        continue  # Skip if not a GitHub link\n\n    # Extract the site domain (e.g., github.com/username/repo)\n    site_bit = title_line.find('span', class_='sitebit comhead')\n    site = site_bit.find('span', class_='sitestr').get_text(strip=True) if site_bit else ''\n\n    # The subtext is in the next 'tr' element\n    subtext_tr = post.find_next_sibling('tr')\n    if not subtext_tr:\n        continue  # Skip if subtext row is not found\n\n    subtext_td = subtext_tr.find('td', class_='subtext')\n    if not subtext_td:\n        continue  # Skip if subtext td is not found\n\n    # Extract score\n    score_span = subtext_td.find('span', class_='score')\n    score = score_span.get_text(strip=True) if score_span else '0 points'\n\n    # Extract author\n    author_a = subtext_td.find('a', class_='hnuser')\n    author = author_a.get_text(strip=True) if author_a else 'unknown'\n\n    # Extract age\n    age_span = subtext_td.find('span', class_='age')\n    age_a = age_span.find('a') if age_span else None\n    age = age_a.get_text(strip=True) if age_a else 'unknown'\n\n    # Extract comments\n    comments_a = subtext_td.find_all('a')[-1] if subtext_td.find_all('a') else None\n    comments_text = comments_a.get_text(strip=True) if comments_a else '0 comments'\n\n    # Construct the Hacker News URL\n    hn_url = f\"https://news.ycombinator.com/item?id={post_id}\"\n\n    # Compile the metadata\n    post_metadata = {\n        'Post': post_id,\n        'title': title,\n        'url': url,\n        'site': site,\n        'score': score,\n        'author': author,\n        'age': age,\n        'comments': comments_text,\n        'hn_url': hn_url\n    }\n\n    # Append to the list of GitHub posts\n    github_posts.append(post_metadata)\n\n# Prepare the output for n8n\noutput = [{'json': post} for post in github_posts]\n\n# Return the output\nreturn output\n"},"id":"32e20b1d-b3f1-4ed2-acbf-4d5bd56b0d8b","name":"Extract Meta","type":"n8n-nodes-base.code","position":[820,-60],"executeOnce":true,"typeVersion":2,"alwaysOutputData":true},{"parameters":{"jsCode":"const items = [];\n\n// Step 1: Collect all Post IDs from input1 items (those with 'id')\nconst processedPosts = new Set(\n  $input.all()\n    .filter(item => item.json.id)\n    .map(item => item.json.Post)\n);\n\n// Step 2: Iterate over all items and filter out duplicates\nfor (const item of $input.all()) {\n  \n  // Only process items without 'id' (input2 items)\n  if(!item.json.id){\n    \n    // Check if the Post ID is already processed\n    if(!processedPosts.has(item.json.Post) && item.json.Post!=undefined){\n      items.push(item);\n    }\n  }\n}\n\nreturn items;\n"},"id":"b54cf663-b823-4613-a812-764942b95b9d","name":"Filter Unposted Items","type":"n8n-nodes-base.code","position":[1480,-60],"typeVersion":2},{"parameters":{"url":"={{ $json.url }}","options":{}},"id":"d7ac7121-8da7-4e45-9b74-daf07fbf15fb","name":"Visit GH Page","type":"n8n-nodes-base.httpRequest","position":[1700,-60],"typeVersion":4.2},{"parameters":{"html":"={{ $json.data }}","options":{}},"id":"f156ca8e-7963-42b9-9612-9ab5efc53be4","name":"Convert HTML To Markdown","type":"n8n-nodes-base.markdown","position":[1920,-60],"typeVersion":1,"alwaysOutputData":true},{"parameters":{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"7776cb97-e02d-418e-a168-612bf92d4160","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"86221ed0-29fa-4775-ba36-8ffdf614977c","name":"Filter Errored","type":"n8n-nodes-base.filter","position":[2736,-60],"typeVersion":2.2},{"parameters":{"person":"EreOwHZxab","text":"={{ $('Filter Errored').item.json.output.linkedin }}","additionalFields":{}},"id":"c31bb906-2a0d-406a-a7cd-6fc4adfcb67b","name":"LinkedIn","type":"n8n-nodes-base.linkedIn","position":[3176,-60],"typeVersion":1,"credentials":{"linkedInOAuth2Api":{"id":"c2sBjKIdMrBfnXqC","name":"My LinkedIn account"}}},{"parameters":{"operation":"update","base":{"__rl":true,"value":"app5MrGYwlswptqM8","mode":"list","cachedResultName":"AI-SocialAmplifier","cachedResultUrl":"https://airtable.com/app5MrGYwlswptqM8"},"table":{"__rl":true,"value":"tblh5cFy4PPWVimNX","mode":"list","cachedResultName":"Twitter and LinkedIn Posts","cachedResultUrl":"https://airtable.com/app5MrGYwlswptqM8/tblh5cFy4PPWVimNX"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Create Item').item.json.id }}","LDone":true},"matchingColumns":["id"],"schema":[{"id":"id","type":"string","display":true,"removed":false,"readOnly":true,"required":false,"displayName":"id","defaultMatch":true},{"id":"Post","type":"string","display":true,"removed":true,"readOnly":false,"required":false,"displayName":"Post","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Title","type":"string","display":true,"removed":true,"readOnly":false,"required":false,"displayName":"Title","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Url","type":"string","display":true,"removed":true,"readOnly":false,"required":false,"displayName":"Url","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Tweet","type":"string","display":true,"removed":true,"readOnly":false,"required":false,"displayName":"Tweet","defaultMatch":false,"canBeUsedToMatch":true},{"id":"LinkedIn","type":"string","display":true,"removed":true,"readOnly":false,"required":false,"displayName":"LinkedIn","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Date","type":"string","display":true,"removed":true,"readOnly":true,"required":false,"displayName":"Date","defaultMatch":false,"canBeUsedToMatch":true},{"id":"Last Modified","type":"string","display":true,"removed":true,"readOnly":true,"required":false,"displayName":"Last Modified","defaultMatch":false,"canBeUsedToMatch":true},{"id":"TDone","type":"boolean","display":true,"removed":true,"readOnly":false,"required":false,"displayName":"TDone","defaultMatch":false,"canBeUsedToMatch":true},{"id":"LDone","type":"boolean","display":true,"removed":false,"readOnly":false,"required":false,"displayName":"LDone","defaultMatch":false,"canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{"typecast":true}},"id":"4aab4cc2-4a51-432a-aa21-ba469c027ac6","name":"Update L Status","type":"n8n-nodes-base.airtable","position":[3396,-60],"typeVersion":2.1,"credentials":{"airtableTokenApi":{"id":"mWJaciC4G76McSYX","name":"Airtable Personal Access Token account"}}},{"parameters":{"operation":"search","base":{"__rl":true,"value":"app5MrGYwlswptqM8","mode":"list","cachedResultName":"AI-SocialAmplifier","cachedResultUrl":"https://airtable.com/app5MrGYwlswptqM8"},"table":{"__rl":true,"value":"tblh5cFy4PPWVimNX","mode":"list","cachedResultName":"Twitter and LinkedIn Posts","cachedResultUrl":"https://airtable.com/app5MrGYwlswptqM8/tblh5cFy4PPWVimNX"},"filterByFormula":"={{ $json.Post }}","options":{"fields":["Title","Url","Post","Date","LDone"]}},"id":"72dd9714-c11d-4417-8710-89e416ac44c9","name":"Search Item","type":"n8n-nodes-base.airtable","position":[1040,-135],"typeVersion":2.1,"alwaysOutputData":true,"credentials":{"airtableTokenApi":{"id":"mWJaciC4G76McSYX","name":"Airtable Personal Access Token account"}}},{"parameters":{"operation":"create","base":{"__rl":true,"value":"app5MrGYwlswptqM8","mode":"list","cachedResultName":"AI-SocialAmplifier","cachedResultUrl":"https://airtable.com/app5MrGYwlswptqM8"},"table":{"__rl":true,"value":"tblh5cFy4PPWVimNX","mode":"list","cachedResultName":"Twitter and LinkedIn Posts","cachedResultUrl":"https://airtable.com/app5MrGYwlswptqM8/tblh5cFy4PPWVimNX"},"columns":{"mappingMode":"defineBelow","value":{"Post":"={{ $('Filter Unposted Items').item.json.Post }}","Title":"={{ $('Filter Unposted Items').item.json.title }}","Url":"={{ $('Filter Unposted Items').item.json.url }}","Tweet":"={{ $json.output.twitter }}","LinkedIn":"={{ $json.output.linkedin }}"},"matchingColumns":[],"schema":[{"id":"Title","displayName":"Title","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Post","displayName":"Post","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Url","displayName":"Url","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Tweet","displayName":"Tweet","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"LinkedIn","displayName":"LinkedIn","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"Date","displayName":"Date","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"dateTime","readOnly":false,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"id":"f89fbada-0e53-44f0-a09b-119869fabd10","name":"Create Item","type":"n8n-nodes-base.airtable","position":[2956,-60],"typeVersion":2.1,"credentials":{"airtableTokenApi":{"id":"mWJaciC4G76McSYX","name":"Airtable Personal Access Token account"}}},{"parameters":{"mode":"runOnceForEachItem","jsCode":"if ($json.output.linkedin) {\n  \n  return $json;\n} else {\n\n  const parsedContent = JSON.parse($json.message.content);\n  if ($json.message.content.linkedin) {\n    return parsedContent;\n  }\n\n  console.log(\"Invalid formatting\")\n  return {}\n}"},"id":"58869c5b-9fb2-4f76-8788-68056cda45b0","name":"Validate Generate Content","type":"n8n-nodes-base.code","position":[2516,-60],"typeVersion":2,"onError":"continueRegularOutput"},{"parameters":{"rule":{"interval":[{"field":"hours","hoursInterval":2}]}},"id":"527fd640-8bc8-4043-92a6-52fbea8de63f","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[380,-60],"typeVersion":1.2},{"parameters":{},"id":"f00c1de5-d5bd-4d78-8717-d26dd739adc7","name":"Merge","type":"n8n-nodes-base.merge","position":[1260,-60],"typeVersion":3,"alwaysOutputData":true},{"parameters":{"content":"Automate the curation and sharing of trending GitHub discussions from Hacker News to Twitter and LinkedIn. This workflow leverages AI to generate engaging posts, streamlining your social media content creation and distribution.\n\n","height":97.20332107671479,"width":619.8433261701165},"id":"2dfd7849-877c-4bd3-b248-94140a1fe209","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[1840,-440],"typeVersion":1},{"parameters":{"content":"I crawl Hacker News and extract Github links.","height":420.37647358435385,"width":524.8824946275869,"color":5},"id":"20704a99-1234-46dc-b8c8-860b051b3b85","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[497.5,-320],"typeVersion":1},{"parameters":{"content":"This is where the magic happens. I use the Github url extracted earlier and visit Github page to get more insights in the project being shared. Then I ask Chat GPT very nicely to help me get a Tweet and a LinkedIn post","height":670.031562962293,"width":828.144505037599,"color":5},"id":"5cfa2c30-6c88-429a-8b5f-0034d2352cc2","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[1620,-470],"typeVersion":1},{"parameters":{"content":"One last magic trick, Send the generated Tweet and the post to the respective platforms.","height":431,"width":286,"color":5},"id":"caec3df6-ddcc-4959-94e1-18163cf3128f","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[3303,-31],"typeVersion":1},{"parameters":{"content":"CHORE","height":392.80719991071624,"width":400.8207630962184},"id":"909c7e7d-ea84-4612-a322-b1fa889b2efb","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[1329.5,-293],"typeVersion":1},{"parameters":{"content":"Make sure we don't post the same content again.","height":285.5933578465706,"width":195.58283685913963,"color":5},"id":"04ab5b63-8def-4d49-9360-596261eb051c","name":"Sticky Note6","type":"n8n-nodes-base.stickyNote","position":[992,-261],"typeVersion":1},{"parameters":{"modelName":"models/gemini-2.0-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[2168,60],"id":"1cb47ae9-9401-456f-a082-b21c586ef6a7","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"Et4q5oYJBE7kF0BW","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"promptType":"define","text":"=<title>\n{{ $('Filter Unposted Items').item.json.title }}\n</title>\n\n<Detail>\n{{ $('Visit GH Page').item.json.data }}\n</Detail>\n\n<Repository Link>\n{{ $('Filter Unposted Items').item.json.url }}\n</Repository Link>\n\n<Response>\n{   \"linkedin\": \"Your LinkedIn post here\" }\n</Response>","hasOutputParser":true,"messages":{"messageValues":[{"message":"=OBJECTIVE\nGenerate engaging, professional, and informative LinkedIn posts that effectively communicate the value of a project, initiative, or idea while maintaining a neutral, narrative-driven tone. The posts should include real-world use case examples to illustrate the project's practical applications. The post should also include the project link.\n\nCONTEXT\nThis assistant is designed exclusively for LinkedIn content generation. The output should align with LinkedIn’s professional audience, focusing on thought leadership, industry insights, and problem-solving narratives. Posts should provide meaningful context, articulate the core benefits, and include relevant hashtags to improve discoverability.\n\nAudience: Professionals, industry leaders, decision-makers, and knowledge seekers.\nTone: Engaging, insightful, and neutral (avoiding personal involvement).\nStructure:\n\nIntroduction – Captures attention with a compelling hook.\nContext & Problem Statement – Defines the challenge or gap.\nSolution & Features – Highlights how the project addresses the issue.\nUse Case Examples – Showcases real-world applications and scenarios where the project provides value.\nImpact & Benefits – Explains the value to different audiences.\nCall to Action (CTA) – Encourages engagement (e.g., \"Learn more here\").\nINSTRUCTIONS\n\nUse a narrative-driven approach that avoids direct personal involvement.\nEnsure clarity and depth by expanding on the project’s key features, real-world use cases, and industry relevance.\nInclude at least two practical use case examples to demonstrate the project's real-world applications.\nIncorporate a clear CTA at the end to encourage engagement (e.g., “Explore the details here”).\nStrictly adhere to LinkedIn’s 3,000-character limit while ensuring conciseness and readability.\nUse only relevant hashtags (e.g., #AI #SoftwareDevelopment #DataScience) to enhance visibility without overloading the post.\nAvoid emojis to maintain a professional tone.\nOutput should be in JSON format for structured integration."}]}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.5,"position":[2140,-160],"id":"6f0a9bb9-93d1-4f46-a769-75e411f08feb","name":"Basic LLM Chain"},{"parameters":{"jsonSchemaExample":"{   \"twitter\": \"Your Twitter post here\",   \"linkedin\": \"Your LinkedIn post here\" }"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[2288,60],"id":"4cf32f1d-9ec5-4e22-84eb-5ca841c308b5","name":"Structured Output Parser"},{"parameters":{"rule":{"interval":[{"field":"hours","hoursInterval":2,"triggerAtMinute":15}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[2218,240],"id":"d479cc3e-5217-4f7c-ba56-06e1ff88c7b5","name":"Check for unposted posts"},{"parameters":{"operation":"search","base":{"__rl":true,"value":"app5MrGYwlswptqM8","mode":"list","cachedResultName":"AI-SocialAmplifier","cachedResultUrl":"https://airtable.com/app5MrGYwlswptqM8"},"table":{"__rl":true,"value":"tblh5cFy4PPWVimNX","mode":"list","cachedResultName":"Twitter and LinkedIn Posts","cachedResultUrl":"https://airtable.com/app5MrGYwlswptqM8/tblh5cFy4PPWVimNX"},"filterByFormula":"NOT({LDone} = 1)","options":{}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[2516,240],"id":"b1b00aa3-4368-4e7b-8cbd-0363682c51dc","name":"Airtable","credentials":{"airtableTokenApi":{"id":"mWJaciC4G76McSYX","name":"Airtable Personal Access Token account"}}},{"parameters":{"sortFieldsUi":{"sortField":[{"fieldName":"Date"}]},"options":{}},"type":"n8n-nodes-base.sort","typeVersion":1,"position":[2736,240],"id":"9f8a23db-1a6d-459d-b984-06b85f098d55","name":"Sort"},{"parameters":{"jsCode":"return $input.first();"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2956,240],"id":"fe8e9244-db53-4b90-a90a-54ad0d703605","name":"Code"},{"parameters":{"person":"EreOwHZxab","text":"={{ $json.LinkedIn }}","additionalFields":{}},"id":"b9b71ec5-9c2d-42df-9341-8bdbdcb02c70","name":"LinkedIn1","type":"n8n-nodes-base.linkedIn","position":[3176,240],"typeVersion":1,"credentials":{"linkedInOAuth2Api":{"id":"c2sBjKIdMrBfnXqC","name":"My LinkedIn account"}}},{"parameters":{"operation":"update","base":{"__rl":true,"value":"app5MrGYwlswptqM8","mode":"list","cachedResultName":"AI-SocialAmplifier","cachedResultUrl":"https://airtable.com/app5MrGYwlswptqM8"},"table":{"__rl":true,"value":"tblh5cFy4PPWVimNX","mode":"list","cachedResultName":"Twitter and LinkedIn Posts","cachedResultUrl":"https://airtable.com/app5MrGYwlswptqM8/tblh5cFy4PPWVimNX"},"columns":{"mappingMode":"defineBelow","value":{"id":"={{ $('Code').item.json.id }}","LDone":true,"status":true},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","readOnly":true,"removed":false},{"id":"Title","displayName":"Title","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Post","displayName":"Post","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Url","displayName":"Url","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Tweet","displayName":"Tweet","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"LinkedIn","displayName":"LinkedIn","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":true},{"id":"Date","displayName":"Date","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"dateTime","readOnly":false,"removed":true},{"id":"LDone","displayName":"LDone","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"boolean","readOnly":false,"removed":false},{"id":"TDone","displayName":"TDone","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"boolean","readOnly":false,"removed":true},{"id":"status","displayName":"status","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"boolean","readOnly":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{"typecast":true}},"id":"5b1735f4-ac38-4259-a8ad-56f554c53fd8","name":"Update L Status1","type":"n8n-nodes-base.airtable","position":[3396,240],"typeVersion":2.1,"credentials":{"airtableTokenApi":{"id":"mWJaciC4G76McSYX","name":"Airtable Personal Access Token account"}}},{"parameters":{"method":"POST","url":"https://ntfy.sh/bigaddict079","sendBody":true,"contentType":"raw","rawContentType":"text/html","body":"={{ $if(($json.fields.LinkedIn.toBoolean() === true ), $json.fields.LinkedIn), $json.fields.LinkedIn }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[3616,90],"id":"e6b80e5a-7317-4d30-adbc-8545592ba805","name":"Push notification to my phone"}],"connections":{"Merge":{"main":[[{"node":"Filter Unposted Items","type":"main","index":0}]]},"LinkedIn":{"main":[[{"node":"Update L Status","type":"main","index":0}]]},"Create Item":{"main":[[{"node":"LinkedIn","type":"main","index":0}]]},"Search Item":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Extract Meta":{"main":[[{"node":"Search Item","type":"main","index":0},{"node":"Merge","type":"main","index":1}]]},"Crawl HN Home":{"main":[[{"node":"Extract Meta","type":"main","index":0}]]},"Visit GH Page":{"main":[[{"node":"Convert HTML To Markdown","type":"main","index":0}]]},"Filter Errored":{"main":[[{"node":"Create Item","type":"main","index":0}]]},"Update L Status":{"main":[[{"node":"Push notification to my phone","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Crawl HN Home","type":"main","index":0}]]},"Filter Unposted Items":{"main":[[{"node":"Visit GH Page","type":"main","index":0}]]},"Convert HTML To Markdown":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]},"Validate Generate Content":{"main":[[{"node":"Filter Errored","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"Basic LLM Chain","type":"ai_outputParser","index":0}]]},"Basic LLM Chain":{"main":[[{"node":"Validate Generate Content","type":"main","index":0}]]},"Check for unposted posts":{"main":[[{"node":"Airtable","type":"main","index":0}]]},"Airtable":{"main":[[{"node":"Sort","type":"main","index":0}]]},"Sort":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"LinkedIn1","type":"main","index":0}]]},"LinkedIn1":{"main":[[{"node":"Update L Status1","type":"main","index":0}]]},"Update L Status1":{"main":[[{"node":"Push notification to my phone","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[6]},"node:Check for unposted posts":{"recurrenceRules":[4]},"node:Github Trigger":{}},"meta":{"templateId":"2681","templateCredsSetupCompleted":true},"pinData":{},"versionId":"805f8d70-b260-478b-9b57-1d6ab111435f","triggerCount":2,"tags":[]}