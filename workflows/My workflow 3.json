{"createdAt":"2025-03-13T14:42:11.395Z","updatedAt":"2025-03-17T12:04:58.006Z","id":"ntqvNCB0yD23WCNP","name":"My workflow 3","active":false,"nodes":[{"parameters":{"formTitle":"Image Generation","formDescription":"Convert your text to images.","formFields":{"values":[{"fieldLabel":"Enter your prompt","placeholder":"Mesoporous carbon synthesis via soft templating method","requiredField":true}]},"responseMode":"lastNode","options":{}},"type":"n8n-nodes-base.formTrigger","typeVersion":2.2,"position":[0,0],"id":"be50eca2-bfc8-4ff8-a102-7b89626f3d4f","name":"On form submission","webhookId":"31690b9e-a73e-4754-ae37-6d6d54201225"},{"parameters":{"url":"=https://image.pollinations.ai/prompt/{{ $json['Enter your prompt'] }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[180,0],"id":"c33c0787-4dc6-4497-9a2d-cc6902ab3730","name":"HTTP Request"},{"parameters":{"language":"python","pythonCode":"# Import necessary modules\nimport asyncio\nimport micropip\n\n# Define an asynchronous function to install packages\nasync def install_packages():\n    await micropip.install(\"opencv-python\")\n    await micropip.install(\"numpy\")\n\n# Run the asynchronous package installation\nasyncio.get_event_loop().run_until_complete(install_packages())\n\nimport cv2\nimport numpy as np\n\nimage_path = $input.first().json.image\nimage = cv2.imread(image_path)\n\n# Convert to grayscale to create a mask for inpainting\ngray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n\n# Manually define the region of the watermark (bottom-right corner)\nwatermark_mask = np.zeros_like(gray)\nwatermark_mask[int(height * 0.90):, int(width * 0.70):] = 255  # Adjusted mask\n\n# Apply inpainting again with a more precise mask\nimage_no_watermark_refined = cv2.inpaint(image, watermark_mask, inpaintRadius=5, flags=cv2.INPAINT_TELEA)\n\n# Convert from BGR to RGB for displaying with matplotlib\nimage_no_watermark_refined = cv2.cvtColor(image_no_watermark_refined, cv2.COLOR_BGR2RGB)\n\nreturn image_no_watermark_refined"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[600,0],"id":"7ff9672a-582e-4d40-8f41-59f92f941de2","name":"Code"},{"parameters":{"operation":"binaryToPropery","destinationKey":"image","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[380,0],"id":"abd01de2-6f74-4065-90fa-896b8569a4b6","name":"Extract from File"}],"connections":{"On form submission":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Code","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{"On form submission":[{"json":{"Enter your prompt":"A cute smiling kitten","submittedAt":"2025-03-17T13:48:40.727+03:00","formMode":"test"}}]},"versionId":"72212e6a-aa72-4586-833e-cab6d66a961e","triggerCount":0,"tags":[]}